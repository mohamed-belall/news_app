import 'package:bloc/bloc.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:news_app/moduels/business/business_screen.dart';import 'package:news_app/moduels/science/science_screen.dart';import 'package:news_app/moduels/setting/setting_screen.dart';import 'package:news_app/moduels/sports/sports_screen.dart';import 'package:news_app/shared/cubit/state.dart';import 'package:news_app/shared/network/local/share_prefrences.dart';import 'package:news_app/shared/network/remote/dio.dart';class NewsCubit extends Cubit<NewsState> {  NewsCubit() : super(NewsInitialState());  static NewsCubit get(context) => BlocProvider.of(context);  /// bottom nav bar  int currentIndex = 0;  List<BottomNavigationBarItem> items = [    BottomNavigationBarItem(      icon: Icon(        Icons.business,      ),      label: 'Business',    ),    BottomNavigationBarItem(      icon: Icon(        Icons.sports,      ),      label: 'Sports',    ),    BottomNavigationBarItem(      icon: Icon(        Icons.science_outlined,      ),      label: 'Science',    ),    BottomNavigationBarItem(      icon: Icon(        Icons.settings,      ),      label: 'Setting',    ),  ];  List<Widget> screens = [    BusinessScreen(),    SportScreen(),    ScienceScreen(),    SettingScreen(),  ];  void bottomNavBar(int index) {    currentIndex = index;    if (index == 0) {      getBusiness();    }    if (index == 1) {      getSports();    }    if (index == 2) {      getScience();    }    emit(NewsInitialState());  }  /// get dio  // business  List<dynamic> business = [];  void getBusiness() {    emit(NewsGetBusinessDataLoadingState());    if (business.length == 0) {      DioHelper.getData(        url: 'v2/top-headlines',        query: {          'country': 'eg',          'category': 'business',          'apiKey': 'a707b41d01f54d1584a0987535a52f08',        },      ).then((value) {        business = value.data['articles'];        print(business[0]['title']);        emit(NewsGetBusinessDataSuccessState());      }).catchError((error) {        print(error.toString());        emit(NewsGetBusinessDataErrorState());      });    } else {      emit(NewsGetBusinessDataSuccessState());    }  }  // sports  List<dynamic> sports = [];  void getSports() {    emit(NewsGetSportsDataLoadingState());    if (sports.length == 0) {      DioHelper.getData(        url: 'v2/top-headlines',        query: {          'country': 'eg',          'category': 'sports',          'apiKey': 'a707b41d01f54d1584a0987535a52f08',        },      ).then((value) {        sports = value.data['articles'];        print(business[0]['title']);        emit(NewsGetSportsDataSuccessState());      }).catchError((error) {        print(error.toString());        emit(NewsGetSportsDataErrorState());      });    } else {      emit(NewsGetSportsDataSuccessState());    }  }  // science  List<dynamic> science = [];  void getScience() {    emit(NewsGetScienceDataLoadingState());    if (science.length == 0) {      DioHelper.getData(        url: 'v2/top-headlines',        query: {          'country': 'eg',          'category': 'science',          'apiKey': 'a707b41d01f54d1584a0987535a52f08',        },      ).then((value) {        science = value.data['articles'];        print(business[0]['title']);        emit(NewsGetScienceDataSuccessState());      }).catchError((error) {        print(error.toString());        emit(NewsGetScienceDataErrorState());      });    } else {      emit(NewsGetScienceDataSuccessState());    }  }  // search  List<dynamic> search = [];  void getSearch(String value) {    emit(NewsGetSearchDataLoadingState());    DioHelper.getData(      url: 'v2/everything',      query: {        'q': '$value',        'apiKey': 'a707b41d01f54d1584a0987535a52f08',      },    ).then((value) {      search = value.data['articles'];      print(search[0]['title']);      emit(NewsGetSearchDataSuccessState());    }).catchError((error) {      print(error.toString());      emit(NewsGetSearchDataErrorState());    });  }  // theme data  bool isDark = true;  void changeTheme({bool? booDark}) {    if (booDark != null) {      isDark = booDark;      emit(NewsThemeDataState());    } else {      isDark = !isDark;      CasheHelper.putData(key: 'isDark', value: isDark).then((value) {        emit(NewsThemeDataState());      });    }  }}